diff --git a/ios/web_view/internal/cwv_web_view_configuration.mm b/ios/web_view/internal/cwv_web_view_configuration.mm
index db4c4bd18207dbfe22c05cb6da2fdb94dced9393..7110894808fa2b710879720ae95e3d5c4130dd6c 100644
--- a/ios/web_view/internal/cwv_web_view_configuration.mm
+++ b/ios/web_view/internal/cwv_web_view_configuration.mm
@@ -5,13 +5,14 @@
 #import <memory>
 
 #import "base/threading/thread_restrictions.h"
-#import "components/affiliations/core/browser/affiliation_service.h"
 #import "components/keyed_service/core/service_access_type.h"
 #import "components/keyed_service/ios/browser_state_dependency_manager.h"
 #import "components/password_manager/core/browser/leak_detection/bulk_leak_check_service_interface.h"
 #import "components/password_manager/core/browser/password_store/password_store_interface.h"
 #import "components/sync/service/sync_service.h"
-#import "ios/web_view/internal/affiliations/web_view_affiliation_service_factory.h"
+#import "ios/chrome/browser/shared/model/application_context/application_context.h"
+#import "ios/chrome/browser/shared/model/browser_state/chrome_browser_state.h"
+#import "ios/chrome/browser/shared/model/browser_state/chrome_browser_state_manager.h"
 #import "ios/web_view/internal/app/application_context.h"
 #import "ios/web_view/internal/autofill/cwv_autofill_data_manager_internal.h"
 #import "ios/web_view/internal/autofill/web_view_personal_data_manager_factory.h"
@@ -38,7 +39,7 @@ NSHashTable<CWVWebViewConfiguration*>* gNonPersistentConfigurations = nil;
 
 @interface CWVWebViewConfiguration () {
   // The BrowserState for this configuration.
-  std::unique_ptr<ios_web_view::WebViewBrowserState> _browserState;
+  ios_web_view::WebViewBrowserState* _browserState;
 
   // Holds all CWVWebViews created with this class. Weak references.
   NSHashTable* _webViews;
@@ -82,10 +83,13 @@ NSHashTable<CWVWebViewConfiguration*>* gNonPersistentConfigurations = nil;
 + (instancetype)defaultConfiguration {
   static dispatch_once_t onceToken;
   dispatch_once(&onceToken, ^{
-    auto browserState = std::make_unique<ios_web_view::WebViewBrowserState>(
-        /* off_the_record = */ false);
+    ios::ChromeBrowserStateManager* browserStateManager =
+        GetApplicationContext()->GetChromeBrowserStateManager();
+    ChromeBrowserState* browserState =
+        browserStateManager->GetLastUsedBrowserStateDeprecatedDoNotUse();
     gDefaultConfiguration = [[CWVWebViewConfiguration alloc]
-        initWithBrowserState:std::move(browserState)];
+        initWithBrowserState:ios_web_view::WebViewBrowserState::
+                                 FromBrowserState(browserState)];
   });
   return gDefaultConfiguration;
 }
@@ -99,12 +103,15 @@ NSHashTable<CWVWebViewConfiguration*>* gNonPersistentConfigurations = nil;
 }
 
 + (CWVWebViewConfiguration*)nonPersistentConfiguration {
-  CWVWebViewConfiguration* defaultConfiguration = [self defaultConfiguration];
-  auto browserState = std::make_unique<ios_web_view::WebViewBrowserState>(
-      /* off_the_record = */ true, defaultConfiguration.browserState);
+  ios::ChromeBrowserStateManager* browserStateManager =
+      GetApplicationContext()->GetChromeBrowserStateManager();
+  ChromeBrowserState* browserState =
+      browserStateManager->GetLastUsedBrowserStateDeprecatedDoNotUse()
+          ->GetOffTheRecordChromeBrowserState();
   CWVWebViewConfiguration* nonPersistentConfiguration =
       [[CWVWebViewConfiguration alloc]
-          initWithBrowserState:std::move(browserState)];
+        initWithBrowserState:ios_web_view::WebViewBrowserState::
+                                 FromBrowserState(browserState)];
 
   // Save a weak pointer to nonpersistent configurations so they may be shut
   // down later.
@@ -118,10 +125,10 @@ NSHashTable<CWVWebViewConfiguration*>* gNonPersistentConfigurations = nil;
 }
 
 - (instancetype)initWithBrowserState:
-    (std::unique_ptr<ios_web_view::WebViewBrowserState>)browserState {
+    (ios_web_view::WebViewBrowserState*)browserState {
   self = [super init];
   if (self) {
-    _browserState = std::move(browserState);
+    _browserState = browserState;
 
     _preferences =
         [[CWVPreferences alloc] initWithPrefService:_browserState->GetPrefs()];
@@ -205,7 +212,7 @@ NSHashTable<CWVWebViewConfiguration*>* gNonPersistentConfigurations = nil;
 #pragma mark - Private Methods
 
 - (ios_web_view::WebViewBrowserState*)browserState {
-  return _browserState.get();
+  return _browserState;
 }
 
 - (void)registerWebView:(CWVWebView*)webView {
@@ -217,7 +224,7 @@ NSHashTable<CWVWebViewConfiguration*>* gNonPersistentConfigurations = nil;
   for (CWVWebView* webView in _webViews) {
     [webView shutDown];
   }
-  _browserState.reset();
+  _browserState = nullptr;
 }
 
 @end
